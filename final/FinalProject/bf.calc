read_line = {} (
	buffer = dim(0),
	output("Enter a bf program: "),
	in = input(),
	(
		buffer = buffer << in,
		in = input()
	) until in == '\n',
	buffer
),

find_end = {buffer _ip} (
	depth = 0,
	current = 0,
	(
		current = buffer[_ip],
		depth = depth + (current == '[' ? 1 : 0),
		depth = depth - (current == ']' ? 1 : 0),
		_ip = _ip + 1
	) until current == ']' and depth == 0,
	_ip - 1
),

find_start = {buffer _ip} (
	depth = 0,
	current = 0,
	(
		current = buffer[_ip],
		depth = depth + (current == ']' ? 1 : 0),
		depth = depth - (current == '[' ? 1 : 0),
		_ip = _ip - 1
	) until current == '[' and depth == 0,
	_ip
),

cells = dim(30000),
head = 0,
line = read_line(),
ip = 0,

(
	char = line[ip],
	char == '+' ?
		(cells[head] = cells[head] + 1 < 0 ? 255 : cells[head] + 1 > 255 ? 0 : cells[head] + 1)
	: char == '-' ?
		(cells[head] = cells[head] - 1 < 0 ? 255 : cells[head] - 1 > 255 ? 0 : cells[head] - 1)
	: char == '<' ?
		(head = head - 1)
	: char == '>' ?
		(head = head + 1)
	: char == '[' and cells[head] == 0 ?
		(ip = find_end(line, ip))
	: char == ']' ?
		(ip = find_start(line, ip))
	: char == '.' ?
		(output(cells[head]))
	: char == ',' ?
		(cells[head] = input())
	: nil,
	ip = ip + 1
) until ip >= len(line)
