#program = expression ;

#expression = series ;
+series = assignment ( "," assignment)* ;
+assignment = loop ( "=" assignment )? ;
+assignment = ( reference "=" assignment ) | loop ;
+loop = ternary ( "until" ternary )* ;
+ternary = logical ( "?" logical ":" ternary )? ;
+logical = comparison ( ( "and" | "or" ) comparison )* ;
+comparison = term ( ( "<" | "<=" | ">" | ">=" | "==" | "!=" ) term )* ;
term = factor ( ( "+" | "-" ) factor )* ;
factor = power ( ( "*" | "/" ) power )* ;
power = append ( "^" power )? ;
append = unary ( "<<" unary )* ;
unary = ( ( "-" | "!" ) unary ) | suffix ;
suffix = primary ( ( "(" arguments ")" ) | index )* ;
#primary = NUMBER | identifier | STRING | function | ( "(" expression ")" ) | "nil" ;

+reference = identifier index? ;
+arguments = ( assignment ( "," assignment )* )? ;
+index = "[" assignment "]" ;

identifier = ALPHA ( ALPHA | DIGIT )* ;
+function = "{" identifier* "}" assignment ;

ALPHA = ("a" ... "z" ) | ( "A" ... "Z" ) | "_" ;
DIGIT = "0" ... "9" ;
STRING = """ character* """ ;
#character = ( " " ... "~" - """ - "\" ) | ( "\" ( "\" | "n" | """ ) ) ;

Anything prefixed with a "+" is not yet implemented yet
Anything prefixed with a "#" is partially implemented

types:
array
double
function
nil

built-in functions:
sqrt(n) = n ^ 0.5
abs(n) = n < 0 ? -n : n
sin(n) = sin(n)
cos(n) = cos(n)
tan(n) = tan(n)
asin(n) = asin(n)
acos(n) = acos(n)
atan(n) = atan(n)
input() = ASCII code from stdin
output(n) = write n to output as an ASCII code
quit() = exit program
